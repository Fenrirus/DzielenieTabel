#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DzielenieTabel
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Sample")]
	public partial class SampleDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEmployees2(Employees2 instance);
    partial void UpdateEmployees2(Employees2 instance);
    partial void DeleteEmployees2(Employees2 instance);
    #endregion
		
		public SampleDataContext() : 
				base(global::DzielenieTabel.Properties.Settings.Default.SampleConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SampleDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SampleDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SampleDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SampleDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Employees2> Employees2
		{
			get
			{
				return this.GetTable<Employees2>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employees2")]
	[global::System.Data.Linq.Mapping.InheritanceMappingAttribute(Code="PermanentEmployee", Type=typeof(Permament))]
	[global::System.Data.Linq.Mapping.InheritanceMappingAttribute(Code="ContractEmployee", Type=typeof(Contract), IsDefault=true)]
	public abstract partial class Employees2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Gender;
		
		private string _Discriminator;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnDiscriminatorChanging(string value);
    partial void OnDiscriminatorChanged();
    #endregion
		
		public Employees2()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(50)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discriminator", DbType="NVarChar(50)", IsDiscriminator=true)]
		public string Discriminator
		{
			get
			{
				return this._Discriminator;
			}
			set
			{
				if ((this._Discriminator != value))
				{
					this.OnDiscriminatorChanging(value);
					this.SendPropertyChanging();
					this._Discriminator = value;
					this.SendPropertyChanged("Discriminator");
					this.OnDiscriminatorChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class Permament : Employees2
	{
		
		private System.Nullable<int> _AnuualSalary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnuualSalaryChanging(System.Nullable<int> value);
    partial void OnAnuualSalaryChanged();
    #endregion
		
		public Permament()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnuualSalary", DbType="Int")]
		public System.Nullable<int> AnuualSalary
		{
			get
			{
				return this._AnuualSalary;
			}
			set
			{
				if ((this._AnuualSalary != value))
				{
					this.OnAnuualSalaryChanging(value);
					this.SendPropertyChanging();
					this._AnuualSalary = value;
					this.SendPropertyChanged("AnuualSalary");
					this.OnAnuualSalaryChanged();
				}
			}
		}
	}
	
	public partial class Contract : Employees2
	{
		
		private System.Nullable<int> _HourlyPay;
		
		private System.Nullable<int> _HoursWorked;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHourlyPayChanging(System.Nullable<int> value);
    partial void OnHourlyPayChanged();
    partial void OnHoursWorkedChanging(System.Nullable<int> value);
    partial void OnHoursWorkedChanged();
    #endregion
		
		public Contract()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HourlyPay", DbType="Int")]
		public System.Nullable<int> HourlyPay
		{
			get
			{
				return this._HourlyPay;
			}
			set
			{
				if ((this._HourlyPay != value))
				{
					this.OnHourlyPayChanging(value);
					this.SendPropertyChanging();
					this._HourlyPay = value;
					this.SendPropertyChanged("HourlyPay");
					this.OnHourlyPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoursWorked", DbType="Int")]
		public System.Nullable<int> HoursWorked
		{
			get
			{
				return this._HoursWorked;
			}
			set
			{
				if ((this._HoursWorked != value))
				{
					this.OnHoursWorkedChanging(value);
					this.SendPropertyChanging();
					this._HoursWorked = value;
					this.SendPropertyChanged("HoursWorked");
					this.OnHoursWorkedChanged();
				}
			}
		}
	}
}
#pragma warning restore 1591
